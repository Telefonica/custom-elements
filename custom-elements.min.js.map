{"version":3,"sources":["src/Utilities.js","src/CustomElementInternals.js","src/CustomElementState.js","src/DocumentConstructionObserver.js","src/CustomElementRegistry.js","src/Deferred.js","src/Patch/Native.js","src/AlreadyConstructedMarker.js","src/Patch/HTMLElement.js","src/custom-elements.js","src/Patch/Interface/ParentNode.js","src/Patch/Document.js","src/Patch/Node.js","src/Patch/Interface/ChildNode.js","src/Patch/Element.js","src/Patch/DocumentFragment.js"],"names":["reservedTagList","Set","regExpValidName","isValidCustomElementName","localName","reserved","has","validForm","test","isConnected","node","nativeValue","undefined","current","__CE_isImportDocument","Document","parentNode","window","ShadowRoot","host","nextSiblingOrAncestorSibling","root","start","nextSibling","walkDeepDescendantElements","callback","visitedImports","nodeType","Node","ELEMENT_NODE","element","getAttribute","importNode","import","add","child","firstChild","shadowRoot","__CE_shadowRoot","setPropertyUnchecked","destination","name","value","constructor","CustomElementInternals","_localNameToDefinition","Map","_constructorToDefinition","_patches","_patchesCount","_hasPatches","setDefinition","definition","set","constructorFunction","addPatch","listener","patchTree","patch","__CE_patched","i","len","length","connectTree","elements","elementsCount","custom","__CE_state","connectedCallback","upgradeElement","disconnectTree","disconnectedCallback","patchAndUpgradeTree","options","upgrade","gatherElements","__CE_hasRegistry","readyState","__CE_documentLoadHandled","addEventListener","clonedVisitedImports","delete","ownerDocument","defaultView","get","localNameToDefinition","constructionStack","push","Error","pop","e","failed","__CE_definition","call","attributeChangedCallback","oldValue","newValue","namespace","observedAttributes","indexOf","DocumentConstructionObserver","internals","doc","document","_internals","_document","_observer","MutationObserver","_handleMutations","bind","observe","childList","subtree","disconnect","mutations","mLen","addedNodes","j","aLen","Deferred","_resolve","_value","_promise","Promise","resolve","CustomElementRegistry","_elementDefinitionIsRunning","_whenDefinedDeferred","_flushCallback","this._flushCallback","fn","_flushPending","_pendingDefinitions","_pendingDefinitionsCount","_documentConstructionObserver","define","Function","TypeError","SyntaxError","getCallback","callbackValue","prototype","Object","adoptedCallback","_flush","pendingDefinitions","elementsWithStableDefinitions","elementsWithStableDefinitionsCount","elementsWithPendingDefinitions","pendingElements","shift","pendingUpgradableElements","deferred","whenDefined","reject","prior","some","d","polyfillWrapFlushCallback","outer","inner","flush","Document_createElement","createElement","Document_createElementNS","createElementNS","Document_importNode","Document_prepend","Document_append","DocumentFragment_prepend","DocumentFragment","DocumentFragment_append","Node_cloneNode","cloneNode","Node_appendChild","appendChild","Node_insertBefore","insertBefore","Node_removeChild","removeChild","Node_replaceChild","replaceChild","getOwnPropertyDescriptor","Node_textContent","Element_attachShadow","Element","Element_innerHTML","Element_insertAdjacentElement","Element_insertAdjacentHTML","Element_prepend","Element_append","Element_before","Element_after","Element_replaceWith","Element_remove","HTMLElement","HTMLElement_innerHTML","HTMLElement_insertAdjacentElement","HTMLElement_insertAdjacentHTML","$jscompDefaultExport","AlreadyConstructedMarker","constructorToDefinition","$jscompDefaultExport$$module$src$Patch$Native.Document_createElement.call","setPrototypeOf","lastIndex","$jscompDefaultExport$$module$src$Patch$Native.HTMLElement","defineProperty","writable","configurable","enumerable","builtIn","appendPrependPatch","builtInMethod","flattenedNodes","flattenedNodesCount","connectedElements","connectedElementsCount","nodes","apply","prepend","append","result","deep","clone","$jscompDefaultExport$$module$src$Patch$Native.Document_importNode.call","NS_HTML","$jscompDefaultExport$$module$src$Patch$Native.Document_createElementNS.call","PatchParentNode","$jscompDefaultExport$$module$src$Patch$Native.Document_prepend","$jscompDefaultExport$$module$src$Patch$Native.Document_append","refNode","insertedNodes","Array","slice","childNodes","nativeResult","$jscompDefaultExport$$module$src$Patch$Native.Node_insertBefore.call","nodeWasConnected","$jscompDefaultExport$$module$src$Patch$Native.Node_appendChild.call","$jscompDefaultExport$$module$src$Patch$Native.Node_cloneNode.call","$jscompDefaultExport$$module$src$Patch$Native.Node_removeChild.call","nodeToInsert","nodeToRemove","$jscompDefaultExport$$module$src$Patch$Native.Node_replaceChild.call","nodeToInsertWasConnected","thisIsConnected","beforeAfterPatch","$jscompDefaultExport$$module$src$Patch$Native.Element_before","$jscompDefaultExport$$module$src$Patch$Native.Element_after","$jscompDefaultExport$$module$src$Patch$Native.Element_replaceWith","wasConnected","$jscompDefaultExport$$module$src$Patch$Native.Element_remove","patch_innerHTML","baseDescriptor","htmlString","removedElements","removedElementsCount","patch_insertAdjacentElement","baseMethod","position","insertedElement","patch_insertAdjacentHTML","upgradeNodesInRange","end","nodesCount","text","toLowerCase","marker","previousSibling","lastChild","String","$jscompDefaultExport$$module$src$Patch$Native.Element_attachShadow","init","$jscompDefaultExport$$module$src$Patch$Native.Element_attachShadow.call","$jscompDefaultExport$$module$src$Patch$Native.Element_innerHTML","$jscompDefaultExport$$module$src$Patch$Native.Element_innerHTML.get","$jscompDefaultExport$$module$src$Patch$Native.HTMLElement_innerHTML","$jscompDefaultExport$$module$src$Patch$Native.HTMLElement_innerHTML.get","innerHTML","assignedValue","isTemplate","content","rawElement","namespaceURI","container","$jscompDefaultExport$$module$src$Patch$Native.HTMLElement_insertAdjacentElement","$jscompDefaultExport$$module$src$Patch$Native.Element_insertAdjacentElement","console","warn","$jscompDefaultExport$$module$src$Patch$Native.HTMLElement_insertAdjacentHTML","$jscompDefaultExport$$module$src$Patch$Native.Element_insertAdjacentHTML","$jscompDefaultExport$$module$src$Patch$Native.Element_prepend","$jscompDefaultExport$$module$src$Patch$Native.Element_append","PatchChildNode","priorCustomElements","PatchHTMLElement","PatchDocument","$jscompDefaultExport$$module$src$Patch$Native.DocumentFragment_prepend","$jscompDefaultExport$$module$src$Patch$Native.DocumentFragment_append","PatchNode","PatchElement","customElements"],"mappings":"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","file":"custom-elements.min.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nconst reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\nconst regExpValidName = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/;\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = regExpValidName.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  const nativeValue = node.isConnected;\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  /** @type {?Node|undefined} */\n  let current = node;\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\n    current = current.parentNode || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\n  }\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !node.nextSibling) {\n    node = node.parentNode;\n  }\n  return (!node || node === root) ? null : node.nextSibling;\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return start.firstChild ? start.firstChild : nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\n  let node = root;\n  while (node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */(node);\n\n      callback(element);\n\n      const localName = element.localName;\n      if (localName === 'link' && element.getAttribute('rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        const importNode = /** @type {!Node} */ (element.import);\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (let child = importNode.firstChild; child; child = child.nextSibling) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      } else if (localName === 'template') {\n        // Ignore descendants of templates. There shouldn't be any descendants\n        // because they will be moved into `.content` during construction in\n        // browsers that support template but, in case they exist and are still\n        // waiting to be moved by a polyfill, they will be ignored.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = element.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = shadowRoot.firstChild; child; child = child.nextSibling) {\n          walkDeepDescendantElements(child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport * as Utilities from './Utilities.js';\nimport CEState from './CustomElementState.js';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /** @type {!Map<string, !CustomElementDefinition>} */\n    this._localNameToDefinition = new Map();\n\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\n    this._constructorToDefinition = new Map();\n\n    /** @type {!Array<!function(!Node)>} */\n    this._patches = [];\n    this._patchesCount = 0;\n\n    /** @type {boolean} */\n    this._hasPatches = false;\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructorFunction, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} listener\n   */\n  addPatch(listener) {\n    this._hasPatches = true;\n    this._patches[this._patchesCount++] = listener;\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patch(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patch(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0, len = this._patches.length; i < len; i++) {\n      this._patches[i](node);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    const elements = [];\n    let elementsCount = 0;\n\n    Utilities.walkDeepDescendantElements(root, element => elements[elementsCount++] = element);\n\n    for (let i = 0; i < elementsCount; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.connectedCallback(element);\n      } else {\n        this.upgradeElement(element);\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    const elements = [];\n    let elementsCount = 0;\n\n    Utilities.walkDeepDescendantElements(root, element => elements[elementsCount++] = element);\n\n    for (let i = 0; i < elementsCount; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    }\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {{\n   *   visitedImports: (!Set<!Node>|undefined),\n   *   upgrade: (!function(!Element)|undefined),\n   * }=} options\n   */\n  patchAndUpgradeTree(root, options = {}) {\n    const visitedImports = options.visitedImports || new Set();\n    const upgrade = options.upgrade || (element => this.upgradeElement(element));\n\n    const elements = [];\n    let elementsCount = 0;\n\n    const gatherElements = element => {\n      if (element.localName === 'link' && element.getAttribute('rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (element.import);\n\n        if (importNode instanceof Node) {\n          importNode.__CE_isImportDocument = true;\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n        }\n\n        if (importNode && importNode.readyState === 'complete') {\n          importNode.__CE_documentLoadHandled = true;\n        } else {\n          // If this link's import root is not available, its contents can't be\n          // walked. Wait for 'load' and walk it when it's ready.\n          element.addEventListener('load', () => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            // Clone the `visitedImports` set that was populated sync during\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\n            // be added. Then, remove *this* link's import node so that we can\n            // walk that import again, even if it was partially walked later\n            // during the same `patchAndUpgradeTree` call.\n            const clonedVisitedImports = new Set(visitedImports);\n            clonedVisitedImports.delete(importNode);\n\n            this.patchAndUpgradeTree(importNode, {visitedImports: clonedVisitedImports, upgrade});\n          });\n        }\n      } else {\n        elements[elementsCount++] = element;\n      }\n    };\n\n    // `walkDeepDescendantElements` populates (and internally checks against)\n    // `visitedImports` when traversing a loaded import.\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\n\n    if (this._hasPatches) {\n      for (let i = 0, len = elements.length; i < len; i++) {\n        this.patch(elements[i]);\n      }\n    }\n\n    for (let i = 0, len = elements.length; i < len; i++) {\n      upgrade(elements[i]);\n    }\n  }\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  upgradeElement(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    // Prevent elements created in documents without a browsing context from\n    // upgrading.\n    //\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#look-up-a-custom-element-definition\n    //   \"If document does not have a browsing context, return null.\"\n    //\n    // https://html.spec.whatwg.org/multipage/window-object.html#dom-document-defaultview\n    //   \"The defaultView IDL attribute of the Document interface, on getting,\n    //   must return this Document's browsing context's WindowProxy object, if\n    //   this Document has an associated browsing context, or null otherwise.\"\n    const ownerDocument = element.ownerDocument;\n    if (\n      !ownerDocument.defaultView &&\n      !(ownerDocument.__CE_isImportDocument && ownerDocument.__CE_hasRegistry)\n    ) return;\n\n    const definition = this.localNameToDefinition(element.localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructorFunction;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (Utilities.isConnected(element)) {\n      this.connectedCallback(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      definition.connectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      definition.disconnectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (this._document.readyState === 'loading') {\n      this._observer = new MutationObserver(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      this._observer.observe(this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  disconnect() {\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = this._document.readyState;\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this.disconnect();\n    }\n\n    for (let i = 0, mLen = mutations.length; i < mLen; i++) {\n      const addedNodes = mutations[i].addedNodes;\n      for (let j = 0, aLen = addedNodes.length; j < aLen; j++) {\n        const node = addedNodes[j];\n        this._internals.patchAndUpgradeTree(node);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport DocumentConstructionObserver from './DocumentConstructionObserver.js';\nimport Deferred from './Deferred.js';\nimport * as Utilities from './Utilities.js';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * The default flush callback triggers the document walk synchronously.\n     * @private\n     * @type {!Function}\n     */\n    this._flushCallback = fn => fn();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushPending = false;\n\n    /**\n     * @private\n     * @type {!Array<!CustomElementDefinition>}\n     */\n    this._pendingDefinitions = [];\n    this._pendingDefinitionsCount = 0;\n\n    /**\n     * @private\n     * @type {!DocumentConstructionObserver}\n     */\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    if (!(constructor instanceof Function)) {\n      throw new TypeError('Custom element constructors must be functions.');\n    }\n\n    if (!Utilities.isValidCustomElementName(localName)) {\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\n    }\n\n    if (this._internals.localNameToDefinition(localName)) {\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw new Error('A custom element is already being defined.');\n    }\n    this._elementDefinitionIsRunning = true;\n\n    let connectedCallback;\n    let disconnectedCallback;\n    let adoptedCallback;\n    let attributeChangedCallback;\n    let observedAttributes;\n    try {\n      /** @type {!Object} */\n      const prototype = constructor.prototype;\n      if (!(prototype instanceof Object)) {\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n      }\n\n      function getCallback(name) {\n        const callbackValue = prototype[name];\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n          throw new Error(`The '${name}' callback must be a function.`);\n        }\n        return callbackValue;\n      }\n\n      connectedCallback = getCallback('connectedCallback');\n      disconnectedCallback = getCallback('disconnectedCallback');\n      adoptedCallback = getCallback('adoptedCallback');\n      attributeChangedCallback = getCallback('attributeChangedCallback');\n      observedAttributes = constructor['observedAttributes'] || [];\n    } catch (e) {\n      return;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    const definition = {\n      localName,\n      constructorFunction: constructor,\n      connectedCallback,\n      disconnectedCallback,\n      adoptedCallback,\n      attributeChangedCallback,\n      observedAttributes,\n      constructionStack: [],\n    };\n\n    this._internals.setDefinition(localName, definition);\n    this._pendingDefinitions[this._pendingDefinitionsCount++] = definition;\n\n    // If we've already called the flush callback and it hasn't called back yet,\n    // don't call it again.\n    if (!this._flushPending) {\n      this._flushPending = true;\n      this._flushCallback(() => this._flush());\n    }\n  }\n\n  upgrade(element) {\n    this._internals.patchAndUpgradeTree(element);\n  }\n\n  _flush() {\n    // If no new definitions were defined, don't attempt to flush. This could\n    // happen if a flush callback keeps the function it is given and calls it\n    // multiple times.\n    if (this._flushPending === false) return;\n    this._flushPending = false;\n\n    const pendingDefinitions = this._pendingDefinitions;\n\n    /**\n     * Unupgraded elements with definitions that were defined *before* the last\n     * flush, in document order.\n     * @type {!Array<!HTMLElement>}\n     */\n    const elementsWithStableDefinitions = [];\n    let elementsWithStableDefinitionsCount = 0;\n\n    /**\n     * A map from `localName`s of definitions that were defined *after* the last\n     * flush to unupgraded elements matching that definition, in document order.\n     * @type {!Map<string, !Array<!HTMLElement>>}\n     */\n    const elementsWithPendingDefinitions = new Map();\n    for (let i = 0, len = pendingDefinitions.length; i < len; i++) {\n      elementsWithPendingDefinitions.set(pendingDefinitions[i].localName, []);\n    }\n\n    this._internals.patchAndUpgradeTree(document, {\n      upgrade: element => {\n        // Ignore the element if it has already upgraded or failed to upgrade.\n        if (element.__CE_state !== undefined) return;\n\n        const localName = element.localName;\n\n        // If there is an applicable pending definition for the element, add the\n        // element to the list of elements to be upgraded with that definition.\n        const pendingElements = elementsWithPendingDefinitions.get(localName);\n        if (pendingElements) {\n          pendingElements.push(element);\n        // If there is *any other* applicable definition for the element, add it\n        // to the list of elements with stable definitions that need to be upgraded.\n        } else if (this._internals.localNameToDefinition(localName)) {\n          elementsWithStableDefinitions[elementsWithStableDefinitionsCount++] = element;\n        }\n      },\n    });\n\n    // Upgrade elements with 'stable' definitions first.\n    for (let i = 0, len = elementsWithStableDefinitions.length; i < len; i++) {\n      this._internals.upgradeElement(elementsWithStableDefinitions[i]);\n    }\n\n    // Upgrade elements with 'pending' definitions in the order they were defined.\n    while (pendingDefinitions.length > 0) {\n      const definition = pendingDefinitions.shift();\n      const localName = definition.localName;\n\n      // Attempt to upgrade all applicable elements.\n      const pendingUpgradableElements = elementsWithPendingDefinitions.get(definition.localName);\n      for (let i = 0, len = pendingUpgradableElements.length; i < len; i++) {\n        this._internals.upgradeElement(pendingUpgradableElements[i]);\n      }\n\n      // Resolve any promises created by `whenDefined` for the definition.\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    }\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructorFunction;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    // Resolve immediately only if the given local name has a definition *and*\n    // the full document walk to upgrade elements with that local name has\n    // already happened.\n    if (definition && !this._pendingDefinitions.some(d => d.localName === localName)) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n\n  polyfillWrapFlushCallback(outer) {\n    this._documentConstructionObserver.disconnect();\n    const inner = this._flushCallback;\n    this._flushCallback = flush => outer(() => inner(flush));\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['upgrade'] = CustomElementRegistry.prototype.upgrade;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nexport default {\n  Document_createElement: window.Document.prototype.createElement,\n  Document_createElementNS: window.Document.prototype.createElementNS,\n  Document_importNode: window.Document.prototype.importNode,\n  Document_prepend: window.Document.prototype['prepend'],\n  Document_append: window.Document.prototype['append'],\n  DocumentFragment_prepend: window.DocumentFragment.prototype['prepend'],\n  DocumentFragment_append: window.DocumentFragment.prototype['append'],\n  Node_cloneNode: window.Node.prototype.cloneNode,\n  Node_appendChild: window.Node.prototype.appendChild,\n  Node_insertBefore: window.Node.prototype.insertBefore,\n  Node_removeChild: window.Node.prototype.removeChild,\n  Node_replaceChild: window.Node.prototype.replaceChild,\n  Node_textContent: Object.getOwnPropertyDescriptor(window.Node.prototype, 'textContent'),\n  Element_attachShadow: window.Element.prototype['attachShadow'],\n  Element_innerHTML: Object.getOwnPropertyDescriptor(window.Element.prototype, 'innerHTML'),\n  Element_getAttribute: window.Element.prototype.getAttribute,\n  Element_setAttribute: window.Element.prototype.setAttribute,\n  Element_removeAttribute: window.Element.prototype.removeAttribute,\n  Element_getAttributeNS: window.Element.prototype.getAttributeNS,\n  Element_setAttributeNS: window.Element.prototype.setAttributeNS,\n  Element_removeAttributeNS: window.Element.prototype.removeAttributeNS,\n  Element_insertAdjacentElement: window.Element.prototype['insertAdjacentElement'],\n  Element_insertAdjacentHTML: window.Element.prototype['insertAdjacentHTML'],\n  Element_prepend: window.Element.prototype['prepend'],\n  Element_append: window.Element.prototype['append'],\n  Element_before: window.Element.prototype['before'],\n  Element_after: window.Element.prototype['after'],\n  Element_replaceWith: window.Element.prototype['replaceWith'],\n  Element_remove: window.Element.prototype['remove'],\n  HTMLElement: window.HTMLElement,\n  HTMLElement_innerHTML: Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, 'innerHTML'),\n  HTMLElement_insertAdjacentElement: window.HTMLElement.prototype['insertAdjacentElement'],\n  HTMLElement_insertAdjacentHTML: window.HTMLElement.prototype['insertAdjacentHTML'],\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n * @extends AlreadyConstructedMarkerType\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['HTMLElement'] = (function() {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      const constructor = /** @type {!Function} */ (this.constructor);\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = /** @type {!HTMLElement} */ (Native.Document_createElement.call(document, definition.localName));\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patch(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      const toConstructElement = /** @type {!HTMLElement} */ (element);\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(toConstructElement, constructor.prototype);\n      internals.patch(toConstructElement);\n\n      return toConstructElement;\n    }\n\n    HTMLElement.prototype = Native.HTMLElement.prototype;\n    // Safari 9 has `writable: false` on the propertyDescriptor\n    // Make it writable so that TypeScript can patch up the\n    // constructor in the ES5 compiled code.\n    Object.defineProperty(HTMLElement.prototype, 'constructor', {\n      writable: true,\n      configurable: true,\n      enumerable: false,\n      value: HTMLElement\n    });\n\n    return HTMLElement;\n  })();\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport CustomElementRegistry from './CustomElementRegistry.js';\n\nimport PatchHTMLElement from './Patch/HTMLElement.js';\nimport PatchDocument from './Patch/Document.js';\nimport PatchDocumentFragment from './Patch/DocumentFragment.js';\nimport PatchNode from './Patch/Node.js';\nimport PatchElement from './Patch/Element.js';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements ||\n     priorCustomElements['forcePolyfill'] ||\n     (typeof priorCustomElements['define'] != 'function') ||\n     (typeof priorCustomElements['get'] != 'function')) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchDocumentFragment(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {!function(...(!Node|string))} builtInMethod\n   * @return {!function(...(!Node|string))}\n   */\n  function appendPrependPatch(builtInMethod) {\n    return /** @this {!Node} */ function(...nodes) {\n      /**\n       * A copy of `nodes`, with any DocumentFragment replaced by its children.\n       * @type {!Array<!Node>}\n       */\n      const flattenedNodes = [];\n      let flattenedNodesCount = 0;\n\n      /**\n       * Elements in `nodes` that were connected before this call.\n       * @type {!Array<!Node>}\n       */\n      const connectedElements = [];\n      let connectedElementsCount = 0;\n\n      for (var i = 0, len = nodes.length; i < len; i++) {\n        const node = nodes[i];\n\n        if (node instanceof Element && Utilities.isConnected(node)) {\n          connectedElements[connectedElementsCount++] = node;\n        }\n\n        if (node instanceof DocumentFragment) {\n          for (let child = node.firstChild; child; child = child.nextSibling) {\n            flattenedNodes[flattenedNodesCount++] = child;\n          }\n        } else {\n          flattenedNodes[flattenedNodesCount++] = node;\n        }\n      }\n\n      builtInMethod.apply(this, nodes);\n\n      for (let i = 0, len = connectedElements.length; i < len; i++) {\n        internals.disconnectTree(connectedElements[i]);\n      }\n\n      if (Utilities.isConnected(this)) {\n        for (let i = 0, len = flattenedNodes.length; i < len; i++) {\n          const node = flattenedNodes[i];\n          if (node instanceof Element) {\n            internals.connectTree(node);\n          }\n        }\n      }\n    };\n  }\n\n  if (builtIn.prepend !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'prepend', appendPrependPatch(builtIn.prepend));\n  }\n\n  if (builtIn.append !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'append', appendPrependPatch(builtIn.append));\n  }\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructorFunction)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElement.call(this, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'importNode',\n    /**\n     * @this {Document}\n     * @param {!Node} node\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(node, deep) {\n      const clone = /** @type {!Node} */ (Native.Document_importNode.call(this, node, !!deep));\n      // Only create custom elements if this document is associated with the registry.\n      if (!this.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructorFunction)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElementNS.call(this, namespace, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  PatchParentNode(internals, Document.prototype, {\n    prepend: Native.Document_prepend,\n    append: Native.Document_append,\n  });\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'insertBefore',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @param {?Node} refNode\n     * @return {!Node}\n     */\n    function(node, refNode) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0, len = insertedNodes.length; i < len; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'appendChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_appendChild.call(this, node);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0, len = insertedNodes.length; i < len; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_appendChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'cloneNode',\n    /**\n     * @this {Node}\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(deep) {\n      const clone = Native.Node_cloneNode.call(this, !!deep);\n      // Only create custom elements if this element's owner document is\n      // associated with the registry.\n      if (!this.ownerDocument.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'removeChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_removeChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'replaceChild',\n    /**\n     * @this {Node}\n     * @param {!Node} nodeToInsert\n     * @param {!Node} nodeToRemove\n     * @return {!Node}\n     */\n    function(nodeToInsert, nodeToRemove) {\n      if (nodeToInsert instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(nodeToInsert.childNodes);\n        const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.disconnectTree(nodeToRemove);\n          for (let i = 0, len = insertedNodes.length; i < len; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeToInsertWasConnected = Utilities.isConnected(nodeToInsert);\n      const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n      const thisIsConnected = Utilities.isConnected(this);\n\n      if (thisIsConnected) {\n        internals.disconnectTree(nodeToRemove);\n      }\n\n      if (nodeToInsertWasConnected) {\n        internals.disconnectTree(nodeToInsert);\n      }\n\n      if (thisIsConnected) {\n        internals.connectTree(nodeToInsert);\n      }\n\n      return nativeResult;\n    });\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {!function(...(!Node|string))} builtInMethod\n   * @return {!function(...(!Node|string))}\n   */\n  function beforeAfterPatch(builtInMethod) {\n    return /** @this {!Node} */ function(...nodes) {\n      /**\n       * A copy of `nodes`, with any DocumentFragment replaced by its children.\n       * @type {!Array<!Node>}\n       */\n      const flattenedNodes = [];\n      let flattenedNodesCount = 0;\n\n      /**\n       * Elements in `nodes` that were connected before this call.\n       * @type {!Array<!Node>}\n       */\n      const connectedElements = [];\n      let connectedElementsCount = 0;\n\n      for (var i = 0, len = nodes.length; i < len; i++) {\n        const node = nodes[i];\n\n        if (node instanceof Element && Utilities.isConnected(node)) {\n          connectedElements[connectedElementsCount++] = node;\n        }\n\n        if (node instanceof DocumentFragment) {\n          for (let child = node.firstChild; child; child = child.nextSibling) {\n            flattenedNodes[flattenedNodesCount++] = child;\n          }\n        } else {\n          flattenedNodes[flattenedNodesCount++] = node;\n        }\n      }\n\n      builtInMethod.apply(this, nodes);\n\n      for (let i = 0, len = connectedElements.length; i < len; i++) {\n        internals.disconnectTree(connectedElements[i]);\n      }\n\n      if (Utilities.isConnected(this)) {\n        for (let i = 0, len = flattenedNodes.length; i < len; i++) {\n          const node = flattenedNodes[i];\n          if (node instanceof Element) {\n            internals.connectTree(node);\n          }\n        }\n      }\n    };\n  }\n\n  if (builtIn.before !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'before', beforeAfterPatch(builtIn.before));\n  }\n\n  if (builtIn.before !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'after', beforeAfterPatch(builtIn.after));\n  }\n\n  if (builtIn.replaceWith !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'replaceWith',\n      /**\n       * @param {...(!Node|string)} nodes\n       * @this {!Node}\n       */\n      function(...nodes) {\n        /**\n         * A copy of `nodes`, with any DocumentFragment replaced by its children.\n         * @type {!Array<!Node|string>}\n         */\n        const flattenedNodes = [];\n        let flattenedNodesCount = 0;\n\n        /**\n         * Elements in `nodes` that were connected before this call.\n         * @type {!Array<!Node>}\n         */\n        const connectedElements = [];\n        let connectedElementsCount = 0;\n\n        for (var i = 0, len = nodes.length; i < len; i++) {\n          const node = nodes[i];\n\n          if (node instanceof Element && Utilities.isConnected(node)) {\n            connectedElements[connectedElementsCount++] = node;\n          }\n\n          if (node instanceof DocumentFragment) {\n            for (let child = node.firstChild; child; child = child.nextSibling) {\n              flattenedNodes[flattenedNodesCount++] = child;\n            }\n          } else {\n            flattenedNodes[flattenedNodesCount++] = node;\n          }\n        }\n\n        const wasConnected = Utilities.isConnected(this);\n\n        builtIn.replaceWith.apply(this, nodes);\n\n        for (let i = 0, len = connectedElements.length; i < len; i++) {\n          internals.disconnectTree(connectedElements[i]);\n        }\n\n        if (wasConnected) {\n          internals.disconnectTree(this);\n          for (let i = 0, len = flattenedNodes.length; i < len; i++) {\n            const node = flattenedNodes[i];\n            if (node instanceof Element) {\n              internals.connectTree(node);\n            }\n          }\n        }\n      });\n    }\n\n  if (builtIn.remove !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'remove',\n      /** @this {!Node} */\n      function() {\n        const wasConnected = Utilities.isConnected(this);\n\n        builtIn.remove.call(this);\n\n        if (wasConnected) {\n          internals.disconnectTree(this);\n        }\n      });\n  }\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\nimport PatchChildNode from './Interface/ChildNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (Native.Element_attachShadow) {\n    Utilities.setPropertyUnchecked(Element.prototype, 'attachShadow',\n      /**\n       * @this {Element}\n       * @param {!{mode: string}} init\n       * @return {ShadowRoot}\n       */\n      function(init) {\n        const shadowRoot = Native.Element_attachShadow.call(this, init);\n        this.__CE_shadowRoot = shadowRoot;\n        return shadowRoot;\n      });\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    try {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */ function(htmlString) {\n        const isConnected = Utilities.isConnected(this);\n\n        // NOTE: In IE11, when using the native `innerHTML` setter, all nodes\n        // that were previously descendants of the context element have all of\n        // their children removed as part of the set - the entire subtree is\n        // 'disassembled'. This work around walks the subtree *before* using the\n        // native setter.\n        let removedElements = undefined,\n          removedElementsCount = 0;\n        if (isConnected) {\n          removedElements = [];\n          Utilities.walkDeepDescendantElements(this, element => {\n            if (element !== this) {\n              removedElements[removedElementsCount++] = element;\n            }\n          });\n        }\n\n        baseDescriptor.set.call(this, htmlString);\n\n        if (removedElements) {\n          for (let i = 0; i < removedElementsCount; i++) {\n            const element = removedElements[i];\n            if (element.__CE_state === CEState.custom) {\n              internals.disconnectedCallback(element);\n            }\n          }\n        }\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      },\n    });\n    } catch (e) {}\n  }\n\n  if (Native.Element_innerHTML && Native.Element_innerHTML.get) {\n    patch_innerHTML(Element.prototype, Native.Element_innerHTML);\n  } else if (Native.HTMLElement_innerHTML && Native.HTMLElement_innerHTML.get) {\n    patch_innerHTML(HTMLElement.prototype, Native.HTMLElement_innerHTML);\n  } else {\n    internals.addPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          return /** @type {!Element} */ (\n                     Native.Node_cloneNode.call(this, true))\n              .innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          const isTemplate = (this.localName === 'template');\n          /** @type {!Node} */\n          const content = isTemplate ? (/** @type {!HTMLTemplateElement} */\n            (this)).content : this;\n          /** @type {!Element} */\n          const rawElement = Native.Document_createElementNS.call(document,\n              this.namespaceURI, this.localName);\n          rawElement.innerHTML = assignedValue;\n\n          while (content.childNodes.length > 0) {\n            Native.Node_removeChild.call(content, content.childNodes[0]);\n          }\n          const container = isTemplate ?\n              /** @type {!HTMLTemplateElement} */ (rawElement).content :\n              rawElement;\n          while (container.childNodes.length > 0) {\n            Native.Node_appendChild.call(content, container.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n  function patch_insertAdjacentElement(destination, baseMethod) {\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentElement',\n      /**\n       * @this {Element}\n       * @param {string} position\n       * @param {!Element} element\n       * @return {?Element}\n       */\n      function(position, element) {\n        const wasConnected = Utilities.isConnected(element);\n        const insertedElement = /** @type {!Element} */\n          (baseMethod.call(this, position, element));\n\n        if (wasConnected) {\n          internals.disconnectTree(element);\n        }\n\n        if (Utilities.isConnected(insertedElement)) {\n          internals.connectTree(element);\n        }\n        return insertedElement;\n      });\n  }\n\n  if (Native.HTMLElement_insertAdjacentElement) {\n    patch_insertAdjacentElement(HTMLElement.prototype, Native.HTMLElement_insertAdjacentElement);\n  } else if (Native.Element_insertAdjacentElement) {\n    patch_insertAdjacentElement(Element.prototype, Native.Element_insertAdjacentElement);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentElement` was not patched.');\n  }\n\n\n  function patch_insertAdjacentHTML(destination, baseMethod) {\n    /**\n     * Patches and upgrades all nodes which are siblings between `start`\n     * (inclusive) and `end` (exclusive). If `end` is `null`, then all siblings\n     * following `start` will be patched and upgraded.\n     * @param {!Node} start\n     * @param {?Node} end\n     */\n    function upgradeNodesInRange(start, end) {\n      const nodes = [];\n      let nodesCount = 0;\n      for (let node = start; node !== end; node = node.nextSibling) {\n        nodes[nodesCount++] = node;\n      }\n      for (let i = 0; i < nodesCount; i++) {\n        internals.patchAndUpgradeTree(nodes[i]);\n      }\n    }\n\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentHTML',\n      /**\n       * @this {Element}\n       * @param {string} position\n       * @param {string} text\n       */\n      function(position, text) {\n        position = position.toLowerCase();\n\n        if (position === \"beforebegin\") {\n          const marker = this.previousSibling;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(marker || /** @type {!Node} */ (this.parentNode.firstChild), this);\n        } else if (position === \"afterbegin\") {\n          const marker = this.firstChild;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(/** @type {!Node} */ (this.firstChild), marker);\n        } else if (position === \"beforeend\") {\n          const marker = this.lastChild;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(marker || /** @type {!Node} */ (this.firstChild), null);\n        } else if (position === \"afterend\") {\n          const marker = this.nextSibling;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(/** @type {!Node} */ (this.nextSibling), marker);\n        } else {\n          throw new SyntaxError(`The value provided (${String(position)}) is ` +\n            \"not one of 'beforebegin', 'afterbegin', 'beforeend', or 'afterend'.\");\n        }\n      });\n  }\n\n  if (Native.HTMLElement_insertAdjacentHTML) {\n    patch_insertAdjacentHTML(HTMLElement.prototype, Native.HTMLElement_insertAdjacentHTML);\n  } else if (Native.Element_insertAdjacentHTML) {\n    patch_insertAdjacentHTML(Element.prototype, Native.Element_insertAdjacentHTML);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentHTML` was not patched.');\n  }\n\n\n  PatchParentNode(internals, Element.prototype, {\n    prepend: Native.Element_prepend,\n    append: Native.Element_append,\n  });\n\n  PatchChildNode(internals, Element.prototype, {\n    before: Native.Element_before,\n    after: Native.Element_after,\n    replaceWith: Native.Element_replaceWith,\n    remove: Native.Element_remove,\n  });\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport Native from './Native.js';\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  PatchParentNode(internals, DocumentFragment.prototype, {\n    prepend: Native.DocumentFragment_prepend,\n    append: Native.DocumentFragment_append,\n  });\n};\n"]}